name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Enable manual trigger
  workflow_dispatch:

# Cancel any in-progress job or run
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 1

  upload-coverage:
    name: Upload Coverage
    needs: test
    runs-on: ubuntu-latest
    if: success()
    permissions:
      contents: write
      pull-requests: write
      checks: write
      statuses: write
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coverage/
      
      - name: Debug Token (masked)
        run: |
          if [ -n "$CODECOV_TOKEN" ]; then
            echo "CODECOV_TOKEN is set (value masked)"
          else
            echo "CODECOV_TOKEN is NOT set"
          fi
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage/
          fail_ci_if_error: true
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          verbose: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Run npm audit
      - name: Run npm audit
        run: npm audit
        continue-on-error: true

      # CodeQL Analysis
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # Snyk security scan
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high

  bundle-size:
    name: Bundle Size
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build

      - name: Check if base branch exists and has package.json
        id: check_base
        continue-on-error: true
        run: |
          git fetch origin ${{ github.base_ref }}
          git checkout ${{ github.base_ref }}
          if [ -f "package.json" ]; then
            echo "has_package_json=true" >> $GITHUB_OUTPUT
          else
            echo "has_package_json=false" >> $GITHUB_OUTPUT
          fi
          git checkout -

      - uses: preactjs/compressed-size-action@v2
        if: steps.check_base.outputs.has_package_json == 'true'
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: "./dist/**/*.{js,css,html,json}"
          exclude: "{dist/**/*.map,dist/extension.zip}"
          minimum-change-threshold: 100
          strip-hash: ""
      
      - name: Skip bundle size check
        if: steps.check_base.outputs.has_package_json != 'true'
        run: |
          echo "Skipping bundle size check as this appears to be the initial setup PR"
          echo "Future PRs will include bundle size comparisons" 